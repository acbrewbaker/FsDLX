<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
      xmlns:ViewModel="clr-namespace:FSharpWpfMvvmTemplate.ViewModel;assembly=App" 
      xmlns:Behavior="clr-namespace:FSharpWpfMvvmTemplate.Behavior;assembly=App"
      mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" Height="326" Width="545">
    <UserControl.DataContext>
        <ViewModel:ExpenseItHomeViewModel></ViewModel:ExpenseItHomeViewModel>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary Source="ApplicationResources.xaml" />
    </UserControl.Resources>
    <Grid Margin="10,0,10,10" VerticalAlignment="Stretch">

        <Grid.Resources>
            <Behavior:StringExistsToVisibilityConverter x:Key="StringExistsToVisibility"/>
            <!-- Name item template -->
            <DataTemplate x:Key="nameItemTemplate">
                <Label Content="{Binding Path=Name}"/>
            </DataTemplate>
            <!-- Expense Type template -->
            <DataTemplate x:Key="typeItemTemplate">
                <Label Content="{Binding Path=ExpenseType}"/>
            </DataTemplate>
            <!-- Amount item template -->
            <DataTemplate x:Key="amountItemTemplate">
                <Label Content="{Binding Path=ExpenseAmount}"/>
            </DataTemplate>
        </Grid.Resources>

        <Grid.Background>
            <ImageBrush ImageSource="watermark.png"  />
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!-- InstructionStates -->
        <Label Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource headerTextStyle}" >
            Instruction States
        </Label>
        <Grid Margin="10" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left">
            <DataGrid ItemsSource="{Binding Path=InstructionStateLineItems}" ColumnHeaderStyle="{StaticResource columnHeaderStyle}" AutoGenerateColumns="False" RowHeaderWidth="0" Margin="0,0,-139,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Instruction" Binding="{Binding Path=Instruction}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Issue" Binding="{Binding Path=Issue}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Execute" Binding="{Binding Path=Execute}" IsReadOnly="True" />
                    <DataGridTextColumn Header="WriteResult" Binding="{Binding Path=WriteResult}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Cycle" Binding="{Binding Path=Cycle}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!-- Reservation Stations -->
        <Label Grid.Row="2" Grid.ColumnSpan="2" Style="{StaticResource headerTextStyle}" >
            Reservation Stations
        </Label>
        <Grid Margin="10" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" VerticalAlignment="Top" HorizontalAlignment="Left">
            <DataGrid ItemsSource="{Binding Path=ExpenseLineItems}" ColumnHeaderStyle="{StaticResource columnHeaderStyle}" AutoGenerateColumns="False" RowHeaderWidth="0" Margin="0,0,-139,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Busy" Binding="{Binding Path=Busy}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Op" Binding="{Binding Path=Op}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Vj" Binding="{Binding Path=Vj}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Vk" Binding="{Binding Path=Vk}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Qj" Binding="{Binding Path=Qj}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Qk" Binding="{Binding Path=Qk}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!-- Register Status (Qi) -->
        <Label Grid.Row="4" Grid.ColumnSpan="2" Style="{StaticResource headerTextStyle}" >
            Register Status (Qi)
        </Label>
        <Grid Margin="10" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Left">
            <DataGrid ItemsSource="{Binding Path=ExpenseLineItems}" ColumnHeaderStyle="{StaticResource columnHeaderStyle}" AutoGenerateColumns="False" RowHeaderWidth="0" Margin="0,0,-139,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="G0" Binding="{Binding Path=G0}" IsReadOnly="True" />
                    <DataGridTextColumn Header="G1" Binding="{Binding Path=G1}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!--<Grid Margin="10" Grid.Column="0" Grid.Row="1" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="1" Style="{StaticResource listHeaderStyle}">
                <Label Style="{StaticResource listHeaderTextStyle}">Names</Label>
            </Border>

            <ListBox Name="peopleListBox" Grid.Row="2" 
                 ItemsSource="{Binding Path=ExpenseReports}"
                 ItemTemplate="{StaticResource nameItemTemplate}"
                 SelectedItem="{Binding Path=SelectedExpenseReport,Mode=TwoWay}"
                 IsSynchronizedWithCurrentItem="True">
            </ListBox>

            -->
        <!-- View report button -->
        <!--
        </Grid>-->
        <Grid Margin="10" Grid.Column="1" Grid.Row="1" DataContext="{Binding SelectedExpenseReport}" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="57*" />
                <ColumnDefinition Width="125*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- Name -->
            <!--
            <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Orientation="Horizontal">
                <Label Style="{StaticResource labelStyle}">Name:</Label>
                <Label Style="{StaticResource labelStyle}" Content="{Binding Path=Name}"></Label>
            </StackPanel>
            -->
            <!-- Department -->
            <!--
            <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Orientation="Horizontal">
                <Label Style="{StaticResource labelStyle}">Department:</Label>
                <Label Style="{StaticResource labelStyle}" Content="{Binding Path=Department}"></Label>
            </StackPanel>-->
            <!--<Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Left">
                -->
            <!-- Expense type and Amount table -->
            <!--
                <DataGrid ItemsSource="{Binding Path=ExpenseLineItems}" ColumnHeaderStyle="{StaticResource columnHeaderStyle}" AutoGenerateColumns="False" RowHeaderWidth="0" Margin="0,0,-139,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ExpenseType" Binding="{Binding Path=ExpenseType}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Amount" Binding="{Binding Path=ExpenseAmount}" IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>-->
        </Grid>
        <!-- This can be used for the EventToCommand example if Expression Blend is installed
             Note: You should also add the following the top of this file: 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" -->
        <!-- 
        <Button Grid.Row="2"  Command="{Binding RejectExpenseReportCommand}" Style="{StaticResource buttonStyle}" Grid.Column="0" Margin="0,10,0,0" Content="Reject">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <Behavior:EventToCommand Command="{Binding MouseEnterButtonCommand}" CommandParameter="Reject" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <Behavior:EventToCommand Command="{Binding MouseLeaveButtonCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Grid.Row="2" Command="{Binding ApproveExpenseReportCommand}" Style="{StaticResource buttonStyle}" Content="Approve"
                Grid.Column="1" Margin="0,10,53,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <Behavior:EventToCommand Command="{Binding MouseEnterButtonCommand}" CommandParameter="Approve" /> 
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <Behavior:EventToCommand Command="{Binding MouseLeaveButtonCommand}" /> 
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button> -->
        <TextBlock Grid.Row="3" HorizontalAlignment="Center" Margin="0,10,0,0" FontSize="12" FontWeight="Bold" Grid.ColumnSpan="2" Text="{Binding LastApprovalDisplayMessage}" Visibility="{Binding Path=LastApprovalDisplayMessage, Converter={StaticResource StringExistsToVisibility}}" />
    </Grid>
</UserControl>
 
